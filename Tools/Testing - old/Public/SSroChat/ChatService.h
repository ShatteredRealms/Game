//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SSroChat/ChatClient.h"
#include "ChatService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API UChatService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable)
	UChatServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	UChatServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroChatChatMessage& Response)> FConnectChannelLambda;
	void CallConnectChannel(const FGrpcSroChatChatChannelTarget& Request, FConnectChannelLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroChatChatMessage& Response)> FConnectDirectMessageLambda;
	void CallConnectDirectMessage(const FGrpcSroCharactersCharacterTarget& Request, FConnectDirectMessageLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FSendChatMessageLambda;
	void CallSendChatMessage(const FGrpcSroChatSendChatMessageRequest& Request, FSendChatMessageLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FSendDirectMessageLambda;
	void CallSendDirectMessage(const FGrpcSroChatSendDirectMessageRequest& Request, FSendDirectMessageLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannel& Response)> FGetChannelLambda;
	void CallGetChannel(const FGrpcSroChatChatChannelTarget& Request, FGetChannelLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannels& Response)> FAllChatChannelsLambda;
	void CallAllChatChannels(const FGrpcGoogleProtobufEmpty& Request, FAllChatChannelsLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FCreateChannelLambda;
	void CallCreateChannel(const FGrpcSroChatCreateChannelMessage& Request, FCreateChannelLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FDeleteChannelLambda;
	void CallDeleteChannel(const FGrpcSroChatChatChannelTarget& Request, FDeleteChannelLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FEditChannelLambda;
	void CallEditChannel(const FGrpcSroChatUpdateChatChannelRequest& Request, FEditChannelLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannels& Response)> FGetAuthorizedChatChannelsLambda;
	void CallGetAuthorizedChatChannels(const FGrpcSroCharactersCharacterTarget& Request, FGetAuthorizedChatChannelsLambda Lambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FUpdateUserChatChannelAuthorizationsLambda;
	void CallUpdateUserChatChannelAuthorizations(const FGrpcSroChatRequestChatChannelAuthChange& Request, FUpdateUserChatChannelAuthorizationsLambda Lambda);

public:
	class Private;
	Private* const d = nullptr;

public:
	UChatService();
	virtual ~UChatService();
};

