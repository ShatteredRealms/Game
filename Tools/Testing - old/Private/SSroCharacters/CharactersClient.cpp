//Generated by TurboLink CodeGenerator, do not edit!
#include "SSroCharacters/CharactersClient.h"
#include "SSroCharacters/CharactersService.h"
#include "CharactersContext.h"
#include "TurboLinkGrpcManager_Private.h"
#include "Templates/SharedPointer.h"

FGrpcContextHandle UCharactersServiceClient::InitGetGenders()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_GetGenders>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::GetGenders(FGrpcContextHandle Handle, const FGrpcGoogleProtobufEmpty& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetGenders = StaticCastSharedPtr<GrpcContext_CharactersService_GetGenders>(*context);
		contextGetGenders->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitGetRealms()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_GetRealms>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::GetRealms(FGrpcContextHandle Handle, const FGrpcGoogleProtobufEmpty& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetRealms = StaticCastSharedPtr<GrpcContext_CharactersService_GetRealms>(*context);
		contextGetRealms->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitGetCharacters()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_GetCharacters>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::GetCharacters(FGrpcContextHandle Handle, const FGrpcGoogleProtobufEmpty& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetCharacters = StaticCastSharedPtr<GrpcContext_CharactersService_GetCharacters>(*context);
		contextGetCharacters->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitGetCharacter()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_GetCharacter>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::GetCharacter(FGrpcContextHandle Handle, const FGrpcSroCharactersCharacterTarget& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetCharacter = StaticCastSharedPtr<GrpcContext_CharactersService_GetCharacter>(*context);
		contextGetCharacter->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitCreateCharacter()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_CreateCharacter>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::CreateCharacter(FGrpcContextHandle Handle, const FGrpcSroCharactersCreateCharacterRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextCreateCharacter = StaticCastSharedPtr<GrpcContext_CharactersService_CreateCharacter>(*context);
		contextCreateCharacter->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitDeleteCharacter()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_DeleteCharacter>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::DeleteCharacter(FGrpcContextHandle Handle, const FGrpcSroCharactersCharacterTarget& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextDeleteCharacter = StaticCastSharedPtr<GrpcContext_CharactersService_DeleteCharacter>(*context);
		contextDeleteCharacter->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitGetAllCharactersForUser()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_GetAllCharactersForUser>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::GetAllCharactersForUser(FGrpcContextHandle Handle, const FGrpcSroUserTarget& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetAllCharactersForUser = StaticCastSharedPtr<GrpcContext_CharactersService_GetAllCharactersForUser>(*context);
		contextGetAllCharactersForUser->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitEditCharacter()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_EditCharacter>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::EditCharacter(FGrpcContextHandle Handle, const FGrpcSroCharactersEditCharacterRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextEditCharacter = StaticCastSharedPtr<GrpcContext_CharactersService_EditCharacter>(*context);
		contextEditCharacter->Call(Request);
	}
}
FGrpcContextHandle UCharactersServiceClient::InitAddCharacterPlayTime()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_CharactersService_AddCharacterPlayTime>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UCharactersServiceClient::AddCharacterPlayTime(FGrpcContextHandle Handle, const FGrpcSroCharactersAddPlayTimeRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextAddCharacterPlayTime = StaticCastSharedPtr<GrpcContext_CharactersService_AddCharacterPlayTime>(*context);
		contextAddCharacterPlayTime->Call(Request);
	}
}
void UCharactersServiceClient::TryCancel(FGrpcContextHandle Handle)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		(*context)->TryCancel();
	}
}

void UCharactersServiceClient::Shutdown()
{
	OnGetGendersResponse.Clear();
	OnGetRealmsResponse.Clear();
	OnGetCharactersResponse.Clear();
	OnGetCharacterResponse.Clear();
	OnCreateCharacterResponse.Clear();
	OnDeleteCharacterResponse.Clear();
	OnGetAllCharactersForUserResponse.Clear();
	OnEditCharacterResponse.Clear();
	OnAddCharacterPlayTimeResponse.Clear();
	Super::Shutdown();
}
