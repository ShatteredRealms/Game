//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SSroChat/ChatMessage.h"
#include "SSroChat/ChatMarshaling.h"
class GrpcContext_ChatService_ConnectChannel : public GrpcContext_Ping_Stream<ChatService_ConnectChannel_ReaderWriter, ::sro::chat::ChatMessage>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Stream<ChatService_ConnectChannel_ReaderWriter, ::sro::chat::ChatMessage> Super;

private:
	void Call(const FGrpcSroChatChatChannelTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_ConnectChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_ConnectDirectMessage : public GrpcContext_Ping_Stream<ChatService_ConnectDirectMessage_ReaderWriter, ::sro::chat::ChatMessage>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Stream<ChatService_ConnectDirectMessage_ReaderWriter, ::sro::chat::ChatMessage> Super;

private:
	void Call(const FGrpcSroCharactersCharacterTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_ConnectDirectMessage(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_SendChatMessage : public GrpcContext_Ping_Pong<ChatService_SendChatMessage_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_SendChatMessage_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatSendChatMessageRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_SendChatMessage(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_SendDirectMessage : public GrpcContext_Ping_Pong<ChatService_SendDirectMessage_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_SendDirectMessage_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatSendDirectMessageRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_SendDirectMessage(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_GetChannel : public GrpcContext_Ping_Pong<ChatService_GetChannel_ReaderWriter, ::sro::chat::ChatChannel>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_GetChannel_ReaderWriter, ::sro::chat::ChatChannel> Super;

private:
	void Call(const FGrpcSroChatChatChannelTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_GetChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_AllChatChannels : public GrpcContext_Ping_Pong<ChatService_AllChatChannels_ReaderWriter, ::sro::chat::ChatChannels>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_AllChatChannels_ReaderWriter, ::sro::chat::ChatChannels> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_AllChatChannels(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_CreateChannel : public GrpcContext_Ping_Pong<ChatService_CreateChannel_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_CreateChannel_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatCreateChannelMessage& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_CreateChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_DeleteChannel : public GrpcContext_Ping_Pong<ChatService_DeleteChannel_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_DeleteChannel_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatChatChannelTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_DeleteChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_EditChannel : public GrpcContext_Ping_Pong<ChatService_EditChannel_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_EditChannel_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatUpdateChatChannelRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_EditChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_GetAuthorizedChatChannels : public GrpcContext_Ping_Pong<ChatService_GetAuthorizedChatChannels_ReaderWriter, ::sro::chat::ChatChannels>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_GetAuthorizedChatChannels_ReaderWriter, ::sro::chat::ChatChannels> Super;

private:
	void Call(const FGrpcSroCharactersCharacterTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_GetAuthorizedChatChannels(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_UpdateUserChatChannelAuthorizations : public GrpcContext_Ping_Pong<ChatService_UpdateUserChatChannelAuthorizations_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_UpdateUserChatChannelAuthorizations_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatRequestChatChannelAuthChange& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_UpdateUserChatChannelAuthorizations(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

