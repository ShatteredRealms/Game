//Generated by TurboLink CodeGenerator, do not edit!
#include "SSroCharacters/CharactersMessage.h"

FGrpcSroCharactersAddPlayTimeRequest UGrpcSroCharactersAddPlayTimeRequestHelperLibrary::MakeAddPlayTimeRequest( 
    FGrpcSroCharactersCharacterTarget Character, FUInt64 Time 
)
{
    FGrpcSroCharactersAddPlayTimeRequest AddPlayTimeRequest;
    AddPlayTimeRequest.Character = MakeShareable(new FGrpcSroCharactersCharacterTarget(Character));
    AddPlayTimeRequest.Time = Time;

    return AddPlayTimeRequest;
}

void UGrpcSroCharactersAddPlayTimeRequestHelperLibrary::BreakAddPlayTimeRequest(const FGrpcSroCharactersAddPlayTimeRequest& AddPlayTimeRequest,  
    FGrpcSroCharactersCharacterTarget& Character, FUInt64& Time 
)
{
    if(AddPlayTimeRequest.Character.Get()) 
    {
        Character = *(AddPlayTimeRequest.Character.Get());
    }
    Time = AddPlayTimeRequest.Time;
}

FGrpcSroCharactersCharacterTargetTarget UGrpcSroCharactersCharacterTargetTargetHelperLibrary::MakeTarget(EGrpcSroCharactersCharacterTargetTarget TargetCase, 
    FUInt64 Id, FString Name 
)
{
    FGrpcSroCharactersCharacterTargetTarget Target;
    Target.TargetCase = TargetCase;
    Target.Id = Id;
    Target.Name = Name;

    return Target;
}

void UGrpcSroCharactersCharacterTargetTargetHelperLibrary::BreakTarget(const FGrpcSroCharactersCharacterTargetTarget& Target, EGrpcSroCharactersCharacterTargetTarget& TargetCase, 
    FUInt64& Id, FString& Name 
)
{
    TargetCase = Target.TargetCase;
    Id = Target.Id;
    Name = Target.Name;
}

FGrpcSroCharactersEditCharacterRequest_owner_id UGrpcSroCharactersEditCharacterRequest_owner_idHelperLibrary::Make_owner_id(EGrpcSroCharactersEditCharacterRequest_owner_id _owner_idCase, 
    FString OwnerId 
)
{
    FGrpcSroCharactersEditCharacterRequest_owner_id _owner_id;
    _owner_id._owner_idCase = _owner_idCase;
    _owner_id.OwnerId = OwnerId;

    return _owner_id;
}

void UGrpcSroCharactersEditCharacterRequest_owner_idHelperLibrary::Break_owner_id(const FGrpcSroCharactersEditCharacterRequest_owner_id& _owner_id, EGrpcSroCharactersEditCharacterRequest_owner_id& _owner_idCase, 
    FString& OwnerId 
)
{
    _owner_idCase = _owner_id._owner_idCase;
    OwnerId = _owner_id.OwnerId;
}

FGrpcSroCharactersEditCharacterRequest_new_name UGrpcSroCharactersEditCharacterRequest_new_nameHelperLibrary::Make_new_name(EGrpcSroCharactersEditCharacterRequest_new_name _new_nameCase, 
    FString NewName 
)
{
    FGrpcSroCharactersEditCharacterRequest_new_name _new_name;
    _new_name._new_nameCase = _new_nameCase;
    _new_name.NewName = NewName;

    return _new_name;
}

void UGrpcSroCharactersEditCharacterRequest_new_nameHelperLibrary::Break_new_name(const FGrpcSroCharactersEditCharacterRequest_new_name& _new_name, EGrpcSroCharactersEditCharacterRequest_new_name& _new_nameCase, 
    FString& NewName 
)
{
    _new_nameCase = _new_name._new_nameCase;
    NewName = _new_name.NewName;
}

FGrpcSroCharactersEditCharacterRequest_gender UGrpcSroCharactersEditCharacterRequest_genderHelperLibrary::Make_gender(EGrpcSroCharactersEditCharacterRequest_gender _genderCase, 
    FString Gender 
)
{
    FGrpcSroCharactersEditCharacterRequest_gender _gender;
    _gender._genderCase = _genderCase;
    _gender.Gender = Gender;

    return _gender;
}

void UGrpcSroCharactersEditCharacterRequest_genderHelperLibrary::Break_gender(const FGrpcSroCharactersEditCharacterRequest_gender& _gender, EGrpcSroCharactersEditCharacterRequest_gender& _genderCase, 
    FString& Gender 
)
{
    _genderCase = _gender._genderCase;
    Gender = _gender.Gender;
}

FGrpcSroCharactersEditCharacterRequest_realm UGrpcSroCharactersEditCharacterRequest_realmHelperLibrary::Make_realm(EGrpcSroCharactersEditCharacterRequest_realm _realmCase, 
    FString Realm 
)
{
    FGrpcSroCharactersEditCharacterRequest_realm _realm;
    _realm._realmCase = _realmCase;
    _realm.Realm = Realm;

    return _realm;
}

void UGrpcSroCharactersEditCharacterRequest_realmHelperLibrary::Break_realm(const FGrpcSroCharactersEditCharacterRequest_realm& _realm, EGrpcSroCharactersEditCharacterRequest_realm& _realmCase, 
    FString& Realm 
)
{
    _realmCase = _realm._realmCase;
    Realm = _realm.Realm;
}

FGrpcSroCharactersEditCharacterRequest_play_time UGrpcSroCharactersEditCharacterRequest_play_timeHelperLibrary::Make_play_time(EGrpcSroCharactersEditCharacterRequest_play_time _play_timeCase, 
    FUInt64 PlayTime 
)
{
    FGrpcSroCharactersEditCharacterRequest_play_time _play_time;
    _play_time._play_timeCase = _play_timeCase;
    _play_time.PlayTime = PlayTime;

    return _play_time;
}

void UGrpcSroCharactersEditCharacterRequest_play_timeHelperLibrary::Break_play_time(const FGrpcSroCharactersEditCharacterRequest_play_time& _play_time, EGrpcSroCharactersEditCharacterRequest_play_time& _play_timeCase, 
    FUInt64& PlayTime 
)
{
    _play_timeCase = _play_time._play_timeCase;
    PlayTime = _play_time.PlayTime;
}

FGrpcSroCharactersEditCharacterRequest_location UGrpcSroCharactersEditCharacterRequest_locationHelperLibrary::Make_location(EGrpcSroCharactersEditCharacterRequest_location _locationCase, 
    FGrpcSroCharactersLocation Location 
)
{
    FGrpcSroCharactersEditCharacterRequest_location _location;
    _location._locationCase = _locationCase;
    _location.Location = MakeShareable(new FGrpcSroCharactersLocation(Location));

    return _location;
}

void UGrpcSroCharactersEditCharacterRequest_locationHelperLibrary::Break_location(const FGrpcSroCharactersEditCharacterRequest_location& _location, EGrpcSroCharactersEditCharacterRequest_location& _locationCase, 
    FGrpcSroCharactersLocation& Location 
)
{
    _locationCase = _location._locationCase;
    if(_location.Location.Get()) 
    {
        Location = *(_location.Location.Get());
    }
}

FGrpcSroCharactersCharacterResponse UGrpcSroCharactersCharacterResponseHelperLibrary::MakeCharacterResponse( 
    FUInt64 Id, FString Owner, FString Name, 
    FString Gender, FString Realm, FUInt64 PlayTime, 
    FGrpcSroCharactersLocation Location 
)
{
    FGrpcSroCharactersCharacterResponse CharacterResponse;
    CharacterResponse.Id = Id;
    CharacterResponse.Owner = Owner;
    CharacterResponse.Name = Name;
    CharacterResponse.Gender = Gender;
    CharacterResponse.Realm = Realm;
    CharacterResponse.PlayTime = PlayTime;
    CharacterResponse.Location = MakeShareable(new FGrpcSroCharactersLocation(Location));

    return CharacterResponse;
}

void UGrpcSroCharactersCharacterResponseHelperLibrary::BreakCharacterResponse(const FGrpcSroCharactersCharacterResponse& CharacterResponse,  
    FUInt64& Id, FString& Owner, FString& Name, 
    FString& Gender, FString& Realm, FUInt64& PlayTime, 
    FGrpcSroCharactersLocation& Location 
)
{
    Id = CharacterResponse.Id;
    Owner = CharacterResponse.Owner;
    Name = CharacterResponse.Name;
    Gender = CharacterResponse.Gender;
    Realm = CharacterResponse.Realm;
    PlayTime = CharacterResponse.PlayTime;
    if(CharacterResponse.Location.Get()) 
    {
        Location = *(CharacterResponse.Location.Get());
    }
}

