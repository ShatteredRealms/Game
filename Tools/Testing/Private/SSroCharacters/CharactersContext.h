//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SSroCharacters/CharactersMessage.h"
#include "SSroCharacters/CharactersMarshaling.h"
class GrpcContext_CharactersService_GetGenders : public GrpcContext_Ping_Pong<CharactersService_GetGenders_ReaderWriter, ::sro::characters::Genders>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_GetGenders_ReaderWriter, ::sro::characters::Genders> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_GetGenders(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_GetRealms : public GrpcContext_Ping_Pong<CharactersService_GetRealms_ReaderWriter, ::sro::characters::Realms>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_GetRealms_ReaderWriter, ::sro::characters::Realms> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_GetRealms(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_GetCharacters : public GrpcContext_Ping_Pong<CharactersService_GetCharacters_ReaderWriter, ::sro::characters::CharactersResponse>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_GetCharacters_ReaderWriter, ::sro::characters::CharactersResponse> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_GetCharacters(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_GetCharacter : public GrpcContext_Ping_Pong<CharactersService_GetCharacter_ReaderWriter, ::sro::characters::CharacterResponse>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_GetCharacter_ReaderWriter, ::sro::characters::CharacterResponse> Super;

private:
	void Call(const FGrpcSroCharactersCharacterTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_GetCharacter(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_CreateCharacter : public GrpcContext_Ping_Pong<CharactersService_CreateCharacter_ReaderWriter, ::sro::characters::CharacterResponse>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_CreateCharacter_ReaderWriter, ::sro::characters::CharacterResponse> Super;

private:
	void Call(const FGrpcSroCharactersCreateCharacterRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_CreateCharacter(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_DeleteCharacter : public GrpcContext_Ping_Pong<CharactersService_DeleteCharacter_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_DeleteCharacter_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroCharactersCharacterTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_DeleteCharacter(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_GetAllCharactersForUser : public GrpcContext_Ping_Pong<CharactersService_GetAllCharactersForUser_ReaderWriter, ::sro::characters::CharactersResponse>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_GetAllCharactersForUser_ReaderWriter, ::sro::characters::CharactersResponse> Super;

private:
	void Call(const FGrpcSroUserTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_GetAllCharactersForUser(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_EditCharacter : public GrpcContext_Ping_Pong<CharactersService_EditCharacter_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_EditCharacter_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroCharactersEditCharacterRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_EditCharacter(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_CharactersService_AddCharacterPlayTime : public GrpcContext_Ping_Pong<CharactersService_AddCharacterPlayTime_ReaderWriter, ::sro::characters::PlayTimeResponse>
{
	friend class UCharactersServiceClient;
	typedef GrpcContext_Ping_Pong<CharactersService_AddCharacterPlayTime_ReaderWriter, ::sro::characters::PlayTimeResponse> Super;

private:
	void Call(const FGrpcSroCharactersAddPlayTimeRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_CharactersService_AddCharacterPlayTime(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

