//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "CharactersMessage.h"
#include "CharactersNode.generated.h"

class UCharactersService;
class UCharactersServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceGetGenders : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceGetGendersDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersGenders&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService GetGenders"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceGetGenders* GetGenders(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetGendersDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetGendersDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersGenders& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceGetRealms : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceGetRealmsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersRealms&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService GetRealms"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceGetRealms* GetRealms(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetRealmsDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetRealmsDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersRealms& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceGetCharacters : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceGetCharactersDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersCharactersResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService GetCharacters"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceGetCharacters* GetCharacters(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetCharactersDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetCharactersDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersCharactersResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceGetCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceGetCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersCharacterResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService GetCharacter"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceGetCharacter* GetCharacter(UObject* WorldContextObject, const FGrpcSroCharactersCharacterTarget& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetCharacterDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetCharacterDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharactersCharacterTarget Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersCharacterResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceCreateCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceCreateCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersCharacterResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService CreateCharacter"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceCreateCharacter* CreateCharacter(UObject* WorldContextObject, const FGrpcSroCharactersCreateCharacterRequest& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceCreateCharacterDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceCreateCharacterDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharactersCreateCharacterRequest Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersCharacterResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceDeleteCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceDeleteCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService DeleteCharacter"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceDeleteCharacter* DeleteCharacter(UObject* WorldContextObject, const FGrpcSroCharactersCharacterTarget& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceDeleteCharacterDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceDeleteCharacterDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharactersCharacterTarget Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceGetAllCharactersForUser : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceGetAllCharactersForUserDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersCharactersResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService GetAllCharactersForUser"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceGetAllCharactersForUser* GetAllCharactersForUser(UObject* WorldContextObject, const FGrpcSroUserTarget& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetAllCharactersForUserDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceGetAllCharactersForUserDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroUserTarget Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersCharactersResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceEditCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceEditCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService EditCharacter"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceEditCharacter* EditCharacter(UObject* WorldContextObject, const FGrpcSroCharactersEditCharacterRequest& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceEditCharacterDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceEditCharacterDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharactersEditCharacterRequest Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharactersServiceAddCharacterPlayTime : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharactersServiceAddCharacterPlayTimeDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharactersPlayTimeResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharactersService AddCharacterPlayTime"), Category = "TurboLink|CharactersService")
	static UCallCharactersServiceAddCharacterPlayTime* AddCharacterPlayTime(UObject* WorldContextObject, const FGrpcSroCharactersAddPlayTimeRequest& Request);

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceAddCharacterPlayTimeDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FCharactersServiceAddCharacterPlayTimeDelegate OnFail;

private:
	UPROPERTY()
	UCharactersService* CharactersService;
	
	UPROPERTY()
	UCharactersServiceClient* CharactersServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharactersAddPlayTimeRequest Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharactersPlayTimeResponse& Response);

	void Shutdown();
};
