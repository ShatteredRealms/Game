// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: authorization.proto
#ifndef GRPC_authorization_2eproto__INCLUDED
#define GRPC_authorization_2eproto__INCLUDED

#include "authorization.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace sro {
namespace accounts {

class AuthorizationService final {
 public:
  static constexpr char const* service_full_name() {
    return "sro.accounts.AuthorizationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::sro::accounts::AuthorizationMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::AuthorizationMessage>> AsyncGetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::AuthorizationMessage>>(AsyncGetAuthorizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::AuthorizationMessage>> PrepareAsyncGetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::AuthorizationMessage>>(PrepareAsyncGetAuthorizationRaw(context, request, cq));
    }
    virtual ::grpc::Status AddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncAddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncAddAuthorizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncAddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncAddAuthorizationRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRemoveAuthorizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRemoveAuthorizationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::accounts::UserRoles* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRoles>> AsyncGetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRoles>>(AsyncGetRolesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRoles>> PrepareAsyncGetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRoles>>(PrepareAsyncGetRolesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::sro::accounts::UserRole* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRole>> AsyncGetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRole>>(AsyncGetRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRole>> PrepareAsyncGetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRole>>(PrepareAsyncGetRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCreateRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCreateRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status EditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncEditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncEditRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncEditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncEditRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::accounts::UserPermissions* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserPermissions>> AsyncGetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserPermissions>>(AsyncGetAllPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserPermissions>> PrepareAsyncGetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserPermissions>>(PrepareAsyncGetAllPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::sro::accounts::IDMessage>> SubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::sro::accounts::IDMessage>>(SubscribeUserUpdatesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>> AsyncSubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>>(AsyncSubscribeUserUpdatesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>> PrepareAsyncSubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>>(PrepareAsyncSubscribeUserUpdatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::sro::accounts::IDMessage>> SubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::sro::accounts::IDMessage>>(SubscribeRoleUpdatesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>> AsyncSubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>>(AsyncSubscribeRoleUpdatesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>> PrepareAsyncSubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>>(PrepareAsyncSubscribeRoleUpdatesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::AuthorizationMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::AuthorizationMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserRoles* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserRoles* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::UserRole* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::UserRole* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserPermissions* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserPermissions* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::sro::accounts::IDMessage>* reactor) = 0;
      virtual void SubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::sro::accounts::IDMessage>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::AuthorizationMessage>* AsyncGetAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::AuthorizationMessage>* PrepareAsyncGetAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncAddAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncAddAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRemoveAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRemoveAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRoles>* AsyncGetRolesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRoles>* PrepareAsyncGetRolesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRole>* AsyncGetRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserRole>* PrepareAsyncGetRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCreateRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCreateRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncEditRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncEditRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserPermissions>* AsyncGetAllPermissionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::accounts::UserPermissions>* PrepareAsyncGetAllPermissionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::sro::accounts::IDMessage>* SubscribeUserUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>* AsyncSubscribeUserUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>* PrepareAsyncSubscribeUserUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::sro::accounts::IDMessage>* SubscribeRoleUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>* AsyncSubscribeRoleUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::sro::accounts::IDMessage>* PrepareAsyncSubscribeRoleUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::sro::accounts::AuthorizationMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::AuthorizationMessage>> AsyncGetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::AuthorizationMessage>>(AsyncGetAuthorizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::AuthorizationMessage>> PrepareAsyncGetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::AuthorizationMessage>>(PrepareAsyncGetAuthorizationRaw(context, request, cq));
    }
    ::grpc::Status AddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncAddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncAddAuthorizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncAddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncAddAuthorizationRaw(context, request, cq));
    }
    ::grpc::Status RemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRemoveAuthorizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRemoveAuthorizationRaw(context, request, cq));
    }
    ::grpc::Status GetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::accounts::UserRoles* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRoles>> AsyncGetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRoles>>(AsyncGetRolesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRoles>> PrepareAsyncGetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRoles>>(PrepareAsyncGetRolesRaw(context, request, cq));
    }
    ::grpc::Status GetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::sro::accounts::UserRole* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRole>> AsyncGetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRole>>(AsyncGetRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRole>> PrepareAsyncGetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRole>>(PrepareAsyncGetRoleRaw(context, request, cq));
    }
    ::grpc::Status CreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCreateRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCreateRoleRaw(context, request, cq));
    }
    ::grpc::Status EditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncEditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncEditRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncEditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncEditRoleRaw(context, request, cq));
    }
    ::grpc::Status DeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteRoleRaw(context, request, cq));
    }
    ::grpc::Status GetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::accounts::UserPermissions* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserPermissions>> AsyncGetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserPermissions>>(AsyncGetAllPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserPermissions>> PrepareAsyncGetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserPermissions>>(PrepareAsyncGetAllPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::sro::accounts::IDMessage>> SubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::sro::accounts::IDMessage>>(SubscribeUserUpdatesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>> AsyncSubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>>(AsyncSubscribeUserUpdatesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>> PrepareAsyncSubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>>(PrepareAsyncSubscribeUserUpdatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::sro::accounts::IDMessage>> SubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::sro::accounts::IDMessage>>(SubscribeRoleUpdatesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>> AsyncSubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>>(AsyncSubscribeRoleUpdatesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>> PrepareAsyncSubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>>(PrepareAsyncSubscribeRoleUpdatesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::AuthorizationMessage* response, std::function<void(::grpc::Status)>) override;
      void GetAuthorization(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::AuthorizationMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void AddAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RemoveAuthorization(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserRoles* response, std::function<void(::grpc::Status)>) override;
      void GetRoles(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserRoles* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::UserRole* response, std::function<void(::grpc::Status)>) override;
      void GetRole(::grpc::ClientContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::UserRole* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CreateRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void EditRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteRole(::grpc::ClientContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserPermissions* response, std::function<void(::grpc::Status)>) override;
      void GetAllPermissions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserPermissions* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubscribeUserUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::sro::accounts::IDMessage>* reactor) override;
      void SubscribeRoleUpdates(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::sro::accounts::IDMessage>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::AuthorizationMessage>* AsyncGetAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::AuthorizationMessage>* PrepareAsyncGetAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncAddAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncAddAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRemoveAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRemoveAuthorizationRaw(::grpc::ClientContext* context, const ::sro::accounts::AuthorizationMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRoles>* AsyncGetRolesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRoles>* PrepareAsyncGetRolesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRole>* AsyncGetRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserRole>* PrepareAsyncGetRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::IDMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCreateRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCreateRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncEditRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncEditRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::sro::accounts::UserRole& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserPermissions>* AsyncGetAllPermissionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::accounts::UserPermissions>* PrepareAsyncGetAllPermissionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::sro::accounts::IDMessage>* SubscribeUserUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>* AsyncSubscribeUserUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>* PrepareAsyncSubscribeUserUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::sro::accounts::IDMessage>* SubscribeRoleUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>* AsyncSubscribeRoleUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::sro::accounts::IDMessage>* PrepareAsyncSubscribeRoleUpdatesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetAuthorization_;
    const ::grpc::internal::RpcMethod rpcmethod_AddAuthorization_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveAuthorization_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoles_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRole_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRole_;
    const ::grpc::internal::RpcMethod rpcmethod_EditRole_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRole_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllPermissions_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeUserUpdates_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeRoleUpdates_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetAuthorization(::grpc::ServerContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::AuthorizationMessage* response);
    virtual ::grpc::Status AddAuthorization(::grpc::ServerContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status RemoveAuthorization(::grpc::ServerContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetRoles(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserRoles* response);
    virtual ::grpc::Status GetRole(::grpc::ServerContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::UserRole* response);
    virtual ::grpc::Status CreateRole(::grpc::ServerContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status EditRole(::grpc::ServerContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DeleteRole(::grpc::ServerContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetAllPermissions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserPermissions* response);
    virtual ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* writer);
    virtual ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAuthorization() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAuthorization(::grpc::ServerContext* context, ::sro::accounts::IDMessage* request, ::grpc::ServerAsyncResponseWriter< ::sro::accounts::AuthorizationMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddAuthorization() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_AddAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddAuthorization(::grpc::ServerContext* context, ::sro::accounts::AuthorizationMessage* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveAuthorization() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_RemoveAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveAuthorization(::grpc::ServerContext* context, ::sro::accounts::AuthorizationMessage* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRoles() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoles(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoles(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::sro::accounts::UserRoles>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRole() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRole(::grpc::ServerContext* context, ::sro::accounts::IDMessage* request, ::grpc::ServerAsyncResponseWriter< ::sro::accounts::UserRole>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateRole() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRole(::grpc::ServerContext* context, ::sro::accounts::UserRole* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EditRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EditRole() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_EditRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditRole(::grpc::ServerContext* context, ::sro::accounts::UserRole* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRole() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRole(::grpc::ServerContext* context, ::sro::accounts::UserRole* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllPermissions() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetAllPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllPermissions(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::sro::accounts::UserPermissions>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeUserUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeUserUpdates() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SubscribeUserUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeUserUpdates(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::sro::accounts::IDMessage>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeRoleUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeRoleUpdates() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SubscribeRoleUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeRoleUpdates(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::sro::accounts::IDMessage>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetAuthorization<WithAsyncMethod_AddAuthorization<WithAsyncMethod_RemoveAuthorization<WithAsyncMethod_GetRoles<WithAsyncMethod_GetRole<WithAsyncMethod_CreateRole<WithAsyncMethod_EditRole<WithAsyncMethod_DeleteRole<WithAsyncMethod_GetAllPermissions<WithAsyncMethod_SubscribeUserUpdates<WithAsyncMethod_SubscribeRoleUpdates<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAuthorization() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::IDMessage, ::sro::accounts::AuthorizationMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::AuthorizationMessage* response) { return this->GetAuthorization(context, request, response); }));}
    void SetMessageAllocatorFor_GetAuthorization(
        ::grpc::MessageAllocator< ::sro::accounts::IDMessage, ::sro::accounts::AuthorizationMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::IDMessage, ::sro::accounts::AuthorizationMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAuthorization(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddAuthorization() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response) { return this->AddAuthorization(context, request, response); }));}
    void SetMessageAllocatorFor_AddAuthorization(
        ::grpc::MessageAllocator< ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddAuthorization(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveAuthorization() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::AuthorizationMessage* request, ::google::protobuf::Empty* response) { return this->RemoveAuthorization(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveAuthorization(
        ::grpc::MessageAllocator< ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveAuthorization(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRoles() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::accounts::UserRoles>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserRoles* response) { return this->GetRoles(context, request, response); }));}
    void SetMessageAllocatorFor_GetRoles(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::sro::accounts::UserRoles>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::accounts::UserRoles>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoles(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoles(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRole() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::IDMessage, ::sro::accounts::UserRole>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::IDMessage* request, ::sro::accounts::UserRole* response) { return this->GetRole(context, request, response); }));}
    void SetMessageAllocatorFor_GetRole(
        ::grpc::MessageAllocator< ::sro::accounts::IDMessage, ::sro::accounts::UserRole>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::IDMessage, ::sro::accounts::UserRole>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRole(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateRole() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::UserRole, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response) { return this->CreateRole(context, request, response); }));}
    void SetMessageAllocatorFor_CreateRole(
        ::grpc::MessageAllocator< ::sro::accounts::UserRole, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::UserRole, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRole(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EditRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EditRole() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::UserRole, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response) { return this->EditRole(context, request, response); }));}
    void SetMessageAllocatorFor_EditRole(
        ::grpc::MessageAllocator< ::sro::accounts::UserRole, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::UserRole, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EditRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditRole(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRole() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::accounts::UserRole, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::accounts::UserRole* request, ::google::protobuf::Empty* response) { return this->DeleteRole(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRole(
        ::grpc::MessageAllocator< ::sro::accounts::UserRole, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::accounts::UserRole, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRole(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllPermissions() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::accounts::UserPermissions>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::sro::accounts::UserPermissions* response) { return this->GetAllPermissions(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllPermissions(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::sro::accounts::UserPermissions>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::accounts::UserPermissions>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeUserUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeUserUpdates() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::sro::accounts::IDMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->SubscribeUserUpdates(context, request); }));
    }
    ~WithCallbackMethod_SubscribeUserUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::sro::accounts::IDMessage>* SubscribeUserUpdates(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeRoleUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeRoleUpdates() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::sro::accounts::IDMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->SubscribeRoleUpdates(context, request); }));
    }
    ~WithCallbackMethod_SubscribeRoleUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::sro::accounts::IDMessage>* SubscribeRoleUpdates(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetAuthorization<WithCallbackMethod_AddAuthorization<WithCallbackMethod_RemoveAuthorization<WithCallbackMethod_GetRoles<WithCallbackMethod_GetRole<WithCallbackMethod_CreateRole<WithCallbackMethod_EditRole<WithCallbackMethod_DeleteRole<WithCallbackMethod_GetAllPermissions<WithCallbackMethod_SubscribeUserUpdates<WithCallbackMethod_SubscribeRoleUpdates<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAuthorization() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddAuthorization() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_AddAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveAuthorization() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_RemoveAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRoles() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoles(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRole() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateRole() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EditRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EditRole() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_EditRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRole() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllPermissions() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetAllPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeUserUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeUserUpdates() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SubscribeUserUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeRoleUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeRoleUpdates() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SubscribeRoleUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAuthorization() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAuthorization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddAuthorization() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_AddAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddAuthorization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveAuthorization() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_RemoveAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveAuthorization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRoles() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoles(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoles(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRole() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateRole() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EditRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EditRole() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_EditRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRole() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllPermissions() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetAllPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllPermissions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeUserUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeUserUpdates() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SubscribeUserUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeUserUpdates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeRoleUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeRoleUpdates() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SubscribeRoleUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeRoleUpdates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAuthorization() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAuthorization(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAuthorization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddAuthorization() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddAuthorization(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddAuthorization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveAuthorization() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveAuthorization(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveAuthorization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRoles() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRoles(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoles(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoles(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRole() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRole(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRole(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateRole() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateRole(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRole(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EditRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EditRole() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EditRole(context, request, response); }));
    }
    ~WithRawCallbackMethod_EditRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditRole(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRole() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRole(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRole(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllPermissions() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllPermissions(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeUserUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeUserUpdates() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeUserUpdates(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeUserUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeUserUpdates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeRoleUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeRoleUpdates() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeRoleUpdates(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeRoleUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeRoleUpdates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAuthorization() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::IDMessage, ::sro::accounts::AuthorizationMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::IDMessage, ::sro::accounts::AuthorizationMessage>* streamer) {
                       return this->StreamedGetAuthorization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::AuthorizationMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAuthorization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::IDMessage,::sro::accounts::AuthorizationMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddAuthorization() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedAddAuthorization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddAuthorization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::AuthorizationMessage,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveAuthorization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveAuthorization() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::AuthorizationMessage, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRemoveAuthorization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveAuthorization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveAuthorization(::grpc::ServerContext* /*context*/, const ::sro::accounts::AuthorizationMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveAuthorization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::AuthorizationMessage,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRoles() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::sro::accounts::UserRoles>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::sro::accounts::UserRoles>* streamer) {
                       return this->StreamedGetRoles(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoles(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserRoles* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoles(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::sro::accounts::UserRoles>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRole() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::IDMessage, ::sro::accounts::UserRole>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::IDMessage, ::sro::accounts::UserRole>* streamer) {
                       return this->StreamedGetRole(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::IDMessage* /*request*/, ::sro::accounts::UserRole* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::IDMessage,::sro::accounts::UserRole>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateRole() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::UserRole, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::UserRole, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCreateRole(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::UserRole,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EditRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EditRole() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::UserRole, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::UserRole, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedEditRole(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EditRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EditRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEditRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::UserRole,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRole() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::accounts::UserRole, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::accounts::UserRole, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteRole(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* /*context*/, const ::sro::accounts::UserRole* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::accounts::UserRole,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllPermissions() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::sro::accounts::UserPermissions>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::sro::accounts::UserPermissions>* streamer) {
                       return this->StreamedGetAllPermissions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllPermissions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::accounts::UserPermissions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllPermissions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::sro::accounts::UserPermissions>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetAuthorization<WithStreamedUnaryMethod_AddAuthorization<WithStreamedUnaryMethod_RemoveAuthorization<WithStreamedUnaryMethod_GetRoles<WithStreamedUnaryMethod_GetRole<WithStreamedUnaryMethod_CreateRole<WithStreamedUnaryMethod_EditRole<WithStreamedUnaryMethod_DeleteRole<WithStreamedUnaryMethod_GetAllPermissions<Service > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeUserUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeUserUpdates() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::sro::accounts::IDMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::sro::accounts::IDMessage>* streamer) {
                       return this->StreamedSubscribeUserUpdates(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeUserUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeUserUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeUserUpdates(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::sro::accounts::IDMessage>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeRoleUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeRoleUpdates() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::sro::accounts::IDMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::sro::accounts::IDMessage>* streamer) {
                       return this->StreamedSubscribeRoleUpdates(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeRoleUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeRoleUpdates(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::sro::accounts::IDMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeRoleUpdates(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::sro::accounts::IDMessage>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_SubscribeUserUpdates<WithSplitStreamingMethod_SubscribeRoleUpdates<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetAuthorization<WithStreamedUnaryMethod_AddAuthorization<WithStreamedUnaryMethod_RemoveAuthorization<WithStreamedUnaryMethod_GetRoles<WithStreamedUnaryMethod_GetRole<WithStreamedUnaryMethod_CreateRole<WithStreamedUnaryMethod_EditRole<WithStreamedUnaryMethod_DeleteRole<WithStreamedUnaryMethod_GetAllPermissions<WithSplitStreamingMethod_SubscribeUserUpdates<WithSplitStreamingMethod_SubscribeRoleUpdates<Service > > > > > > > > > > > StreamedService;
};

}  // namespace accounts
}  // namespace sro


#endif  // GRPC_authorization_2eproto__INCLUDED
