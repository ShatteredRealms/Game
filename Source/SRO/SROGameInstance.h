// Copyright 2022 Shattered Realms Online

#pragma once

#include "CoreMinimal.h"
#include "Auth/Keycloak/Keycloak.h"
#include "Character/SROBaseCharacter.h"
#include "Chat/SROChatManager.h"
#include "Engine/GameInstance.h"
#include "SROGameInstance.generated.h"

/**
 * 
 */
UCLASS()
class SRO_API USROGameInstance : public UGameInstance
{
	GENERATED_BODY()

protected:
	
	FTimerHandle TokenRefreshTimerHandle;

	void OnKeycloakError(const FString& Error);

	void RequestUpdateTokens();
	
public:
	UPROPERTY()
	UKeycloak* Keycloak;
	
	virtual void Init() override;
	
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString SelectedCharacterName;
	
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int32 SelectedCharacterId;
	
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString AccountUsername;
	
	/**
	 * The authentication token for the player generated by the SRO authentication service per the OAuth2 and OIDC
	 * standards.
	 */
	UPROPERTY(BlueprintReadWrite, Category = "Authentication")
	FString AuthToken;
	
	/**
	 * The refresh token for the player generated by the SRO authentication service that allows the user to request
	 * a new auth token per the OAuth2 and OIDC standards.
	 */
	UPROPERTY(BlueprintReadWrite, Category = "Authentication")
	FString RefreshToken;

	/**
	 * The parsed unique user id from the auth token.
	 */
	UPROPERTY(BlueprintReadWrite, Category = "Authentication")
	FString UserId;

	UFUNCTION(Blueprintcallable)
	void UpdateAuthTokens(const FString& NewAuthToken, const FString& NewRefreshToken);

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	USROChatManager* ChatManager;

	UFUNCTION(BlueprintCallable)
	void Logout();
};
